services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    environment:
      NODE_ENV: development
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT} 
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    env_file: 
      - .env
    environment:
      NODE_ENV: development
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./api
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    

  db:
    image: postgres:17
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./db/02-default_seed.sql:/docker-entrypoint-initdb.d/02-default_seed.sql
      - ./db/03-development_seed.sql:/docker-entrypoint-initdb.d/03-development_seed.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:${DB_PORT}
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    env_file:
      - .env
    profiles: [tools]
    restart: always
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy 

volumes:
  db-data:
  pgadmin-data: